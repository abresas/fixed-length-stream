// Generated by CoffeeScript 1.8.0
(function() {
  var es, fs, overflowStream, underflowStream;

  es = require('event-stream');

  fs = require('fs');

  exports.underflowStream = underflowStream = function(length) {
    var pipedLength;
    pipedLength = 0;
    return es.through(function(data) {
      pipedLength += data.length;
      return this.emit('data', data);
    }, function(data) {
      var zeroStream;
      if (pipedLength < length) {
        zeroStream = fs.createReadStream('/dev/zero', {
          start: 0,
          end: length - pipedLength - 1
        });
        zeroStream.on('data', (function(_this) {
          return function(data) {
            return _this.emit('data', data);
          };
        })(this));
        return zeroStream.on('end', (function(_this) {
          return function() {
            return _this.emit('end');
          };
        })(this));
      } else {
        return this.emit('end');
      }
    });
  };

  exports.overflowStream = overflowStream = function(length) {
    var pipedLength;
    pipedLength = 0;
    return es.through(function(data) {
      var offset;
      if (length < pipedLength + data.length) {
        offset = length - pipedLength;
        data = data.slice(0, offset);
        pipedLength = length;
        this.emit('data', data);
        return this.emit('error', new RangeError('Stream overflowed'));
      } else {
        pipedLength += data.length;
        return this.emit('data', data);
      }
    });
  };

  exports.fixedLengthStream = function(length) {
    return es.pipe(underflowStream(length), overflowStream(length));
  };

}).call(this);
